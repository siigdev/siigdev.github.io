{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","PostLink","_ref","post","a","createElement","Link","to","frontmatter","path","title","date","IndexPage","_ref2","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","InternalPageRenderer","Object","assign","json","loader","enqueue","createContext","Header","siteTitle","react_default","gatsby_link_default","defaultProps","Layout","children","_856328897","Fragment","header","site","siteMetadata","style","margin","maxWidth","padding","paddingTop"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAIMS,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACfL,EAAAM,EAAAC,cAAA,WACEP,EAAAM,EAAAC,cAACC,KAAD,CAAMC,GAAIJ,EAAKK,YAAYC,MACxBN,EAAKK,YAAYE,MADpB,KAC6BP,EAAKK,YAAYG,KAD9C,OAgBWC,UAVG,SAAAC,GAIZ,IACEC,EADFD,EAHJE,KACEC,kBAAqBC,MAIpBC,OAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKZ,YAAYG,OACvCU,IAAI,SAAAF,GAAI,OAAIrB,EAAAM,EAAAC,cAACJ,EAAD,CAAUqB,IAAKH,EAAKC,KAAKG,GAAIpB,KAAMgB,EAAKC,SACvD,OAAOtB,EAAAM,EAAAC,cAACL,EAAA,EAAD,KAAQF,EAAAM,EAAAC,cAAA,WAAMS,KAGhB,IAAMlB,EAAS,kCCvBtB,IAAsB4B,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4JCsBhCK,UAjBU,SAAA3B,GAAiC,IAA9B4B,EAA8B5B,EAA9B4B,SAAUC,EAAoB7B,EAApB6B,cACpC,OAAKA,EAGEC,IAAM3B,cAAc4B,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,kGCOcC,QAAOC,QAELN,IAAMO,cAAc,ICZ/C,IAAMC,EAAS,SAAAtC,KAAGuC,UAAH,OACbC,EAAAtC,EAAAC,cAAA,cACEqC,EAAAtC,EAAAC,cAAA,WACIqC,EAAAtC,EAAAC,cAACsC,EAAAvC,EAAD,CAAMG,GAAG,KAAT,SACAmC,EAAAtC,EAAAC,cAACsC,EAAAvC,EAAD,CAAMG,GAAG,SAAT,WASRiC,EAAOI,aAAe,CACpBH,UAAS,IAGID,eCyBAK,IAhCA,SAAA3C,GAAkB,IAAf4C,EAAe5C,EAAf4C,SACV/B,EAAIgC,EAAAhC,KAUV,OACE2B,EAAAtC,EAAAC,cAAAqC,EAAAtC,EAAA4C,SAAA,KACEN,EAAAtC,EAAAC,cAAC4C,EAAD,CAAQR,UAAW1B,EAAKmC,KAAKC,aAAazC,QAC1CgC,EAAAtC,EAAAC,cAAA,OACE+C,MAAO,CACLC,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPC,WAAY,IAGdd,EAAAtC,EAAAC,cAAA,YAAOyC","file":"component---src-pages-blog-js-fd26732919d86f27fea3.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst PostLink = ({ post }) => (\n  <div>\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n  </div>\n)\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n  return <Layout><div>{Posts}</div></Layout>\n}\nexport default IndexPage\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div>\n        <Link to=\"/\">About</Link>\n        <Link to=\"/blog\">Blog</Link>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./styles/layout.scss\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}